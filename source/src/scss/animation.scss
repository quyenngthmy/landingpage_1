@tailwind base;
@tailwind components;
@tailwind utilities;
// hover zoomIn
@mixin transition($name, $duration, $delay, $ease) {
    transition: {
        property: $name;
        duration: $duration ;
        delay: $delay; 
        timing-function: $ease;
    }
  }
@mixin animate($animation, $duration, $method, $times) {
    animation: $animation $duration $method $times;
}
    
@mixin keyframes($name) {
    @keyframes #{$name} {
        @content;
    }
}

@layer components {

.reveal{
    &.active{
        opacity: 1;
        transition-delay: 0.5s;
        &.fadeInRight{
            @include keyframes(fadeInRight);
            @include animate(fadeInRight, 500ms, ease-in-out, 0s);
        }
        &.fadeInLeft { 
            @include keyframes(fadeInLeft);
            @include animate(fadeInLeft, 500ms,ease-in-out ,0s);
        }
        &.fadeInUp { 
            @include keyframes(fadeInUp);
            @include animate(fadeInUp,500ms,ease-in-out,0s);
        }
        &.fadeInDown { 
            @include keyframes(fadeInDown);
            @include animate(fadeInDown, 500ms, ease-in-out, 0s);
        }
        &.fadeIn { 
            @include keyframes(fadeIn);
            @include animate(fadeIn,500ms,ease-in-out,0s);
        }
        &.flipMoveInUp { 
            @include keyframes(flipMoveInUp);
            @include animate(flipMoveInUp,1s,ease-in-out,0s);
        }
    }
}

//   một số ví dụ về hover . lưu ý cách đặt tên class (tùy biến phù hợp với nội dung của layout) phải có nghĩa tường minh, không đặt các class tổng quát như ví dụ
.zoomIn{
    transform: scale(1);
    @include transition(all,0.2s,0s,ease-in-out);
    &:hover{
        transform: scale(1.1);
        @include transition(all,0.3s,0s,ease-in-out);
    }
}
.zoomOut{
    transform: scale(1);
    @include transition(all,0.2s,0s,ease-in-out);
    &:hover{
        transform: scale(0.9);
        @include transition(all,0.3s,0s,ease-in-out);
    }
}
.moveUp{
    transform: translateY(0);
    @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    &:hover{
        transform: translateY(-30px);
        @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    }
}
.moveDown{
    transform: translateY(0);
    @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    &:hover{
        transform: translateY(30px);
        @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    }
}
.overflow{
    opacity: 0;
    transform: translateY(0);
    @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    &:hover{
        opacity: 1;
        transform: translateY(-250px);
        @include transition(all,0.2s,0s,cubic-bezier(0.25, 0.1, 0.25, 1));
    }

}

/* animation */
/* lưu ý: các thông số của animation có thể thay đổi phù hợp với yêu cầu của các layout, một số animation là kết hợp của các animation bên dưới */
@mixin keyframes($name){
    @keyframes #{$name}{
        @content;
    }
}
@mixin animate($animation,$duration,$method,$times){
    animation: $animation $duration $method $times;
}


// flip in left
.flipInLeft { 
    @include keyframes(flipInLeft) {
        0% {
            opacity:0;
            transform: rotateY(-45deg);
           
        }
        100% {
            opacity:1;
            transform: rotateY(0deg);
        }
    }
    @include animate(flipInLeft,1.5s,ease-in-out,1s);
}

// flip in right
.flipInRight { 
    @include keyframes(flipInRight) {
        0% {
            opacity:0;
            transform: rotateY(45deg);
           
        }
        100% {
            opacity:1;
            transform: rotateY(0deg);
        }
    }
    @include animate(flipInRight,1s,ease-in-out,1s);
}

// flip move in up
.flipMoveInUp { 
    @include keyframes(flipMoveInUp) {
        0% {
            opacity:0;
            transform: rotateY(-120deg) translateY(100px);
        }
        100% {
            opacity:1;
            transform: rotateY(0deg) translateY(0);
        }
    }
    @include animate(flipMoveInUp,1.5s,ease-in-out,0s);
}

// flip move in down
.flipMoveInDown { 
    @include keyframes(flipMoveInDown) {
        0% {
            opacity:0;
            transform: rotateY(-30deg) translateY(-100px);
        }
        100% {
            opacity:1;
            transform: rotateY(0deg) translateY(0);
        }
    }
    @include animate(flipMoveInDown,1s,ease-in-out,0.1s);
}

// fade in left
.fadeinLeft { 
    @include keyframes(fadeinLeft) {
        0% {
            opacity:0;
            transform: translateX(-100px);
        }
        100% {
            opacity:1;
            transform: translateX(0);
        }
    }
    @include animate(fadeinLeft, 1s,ease-in-out,0.3s);
}
 
// fade in right
.fadeinRight { 
    @include keyframes(fadeinRight) {
        0% {
            opacity:0;
            transform: translateX(100px);
        }
        100% {
            opacity:1;
            transform: translateX(0);
        }
    }
    @include animate(fadeinRight, 1s,ease-in-out,0.3s);
}
// fade Zoom in
.fadeZoomin { 
    @include keyframes(fadeZoomin) {
        0% {
            opacity:0;
            transform: scale(0.75);
        }
        100% {
            opacity:1;
            transform: scale(1);
        }
    }
    @include animate(fadeZoomin, 0.4s,cubic-bezier(0.12, 0.4, 0.29, 1.45),0.2s);
}

// fadeZoomout
.fadeZoomout { 
    @include keyframes(fadeZoomout) {
        0% {
            opacity:0;
            transform: scale(1);
        }
        100% {
            opacity:1;
            transform: scale(0.75);
        }
    }
    @include animate(fadeZoomout, 0.4s,cubic-bezier(0.12, 0.4, 0.29, 1.45),0.2s);
}

// fase flip X
.fadeFlipX { 
    @include keyframes(fadeFlipX) {
        0% {
            opacity:0;
            transform: rotateX(-10deg);
            animation-duration: .2s;
            animation-delay: .6;
        }
        25% {
            opacity:1;
            transform: rotateX(16deg);
            animation-duration: .2s;
            animation-delay: .8;
        }
        50% {
            opacity:1;
            transform: rotateX(-9deg);
        }
        100% {
            opacity:1;
            transform: rotateY(3deg) ;
            animation-duration: .2s;
            animation-delay: 1s;
        }
    }
    @include animate(fadeFlipX, 1s,ease-in-out,0.5s);
}


// fade in
@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

// fade in left
@keyframes fadeInLeft {
    0% {
        opacity:0;
        transform: translateX(-64px);
    }
    100% {
        opacity:1;
        transform: translateX(0);
    }
}
     
// fade in right
@keyframes fadeInRight {
    0% {
        opacity:0;
        transform: translateX(64px);
    }
    100% {
        opacity:1;
        transform: translateX(0);
    }
}
    
// fade in Up
@keyframes fadeInUp {
    0% {
        opacity:0;
        transform: translateY(50px);
    }
    100% {
        transform: translateY(0);
        opacity:1;
    }
}
    
// fade in Down
@keyframes fadeInDown {
    0% {
        transform:translate(0px, -64px); 
        opacity: 0;
    }
    100% {
        transform:translate(0px, 0); 
        opacity: 1;
    }
}
    
// flip move in up
@keyframes flipMoveInUp {
    0% {
        opacity:0;
        transform: rotateX(-180deg);
    }
    100% {
        opacity:1;
        transform: rotateX(0deg);
    }
}

}
